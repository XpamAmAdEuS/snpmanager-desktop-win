<Page
    NavigationCacheMode="Disabled"
    mc:Ignorable="d"
    x:Class="SnpApp.Views.MusicImportPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:common="using:SnpApp.Common"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:SnpApp.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:SnpApp.Models"
    xmlns:primitives="using:CommunityToolkit.WinUI.UI.Controls.Primitives"
    xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:uc="using:SnpApp.UserControls"
    xmlns:vm="using:SnpApp.Converters"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Page.Resources>
        <vm:PlaybackStateToButtonIconConverter x:Key="MediaPlaybackStateToButtonIconConverter" />
    </Page.Resources>

    <RelativePanel Padding="36,4,36,0" x:Name="PanelRoot">
        <TextBlock
            Style="{StaticResource TitleTextBlockStyle}"
            Text="Music Import"
            x:Name="PageTitle" />

        <CommandBar
            Background="Transparent"
            DefaultLabelPosition="Right"
            HorizontalAlignment="Stretch"
            RelativePanel.LeftOf="SearchBox"
            RelativePanel.RightOf="PageTitle"
            x:Name="MainCommandBar">
            <AppBarButton
                Icon="Refresh"
                Label="Sync"
                ToolTipService.ToolTip="Sync with server" />
        </CommandBar>

        <uc:CollapsibleSearchBox
            CollapseWidth="{StaticResource LargeWindowSnapPoint}"
            Loaded="SearchBox_Loaded"
            Margin="12,8,12,0"
            RelativePanel.AlignRightWithPanel="True"
            Width="240"
            x:Name="SearchBox" />


        <Grid
            Margin="0,10,0,0"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.Below="MainCommandBar">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*" />
                <ColumnDefinition Width="0.3*" />
            </Grid.ColumnDefinitions>

            <!--  <toolkit:DataGrid  -->
            <!--  AutoGenerateColumns="False"  -->
            <!--  BorderThickness="0"  -->
            <!--  CanUserReorderColumns="False"  -->
            <!--  CanUserResizeColumns="False"  -->
            <!--  Grid.Column="0"  -->
            <!--  GridLinesVisibility="None"  -->
            <!--  IsReadOnly="False"  -->
            <!--  Sorting="DataGrid_Sorting"  -->
            <!--  x:Name="DataGrid">  -->
            <!--     <toolkit:DataGrid.Columns> -->
            <!--         <toolkit:DataGridTemplateColumn> -->
            <!--             <toolkit:DataGridTemplateColumn.HeaderStyle> -->
            <!--                 <Style TargetType="primitives:DataGridColumnHeader"> -->
            <!--                     <Setter Property="ContentTemplate"> -->
            <!--                         <Setter.Value> -->
            <!--                             <DataTemplate> -->
            <!--                                 <StackPanel Orientation="Horizontal"> -->
            <!--                                     <CheckBox Command="{Binding CheckAllCommand}" IsChecked="{Binding IsAllSelected}" /> -->
            <!--                                 </StackPanel> -->
            <!--                             </DataTemplate> -->
            <!--                         </Setter.Value> -->
            <!--                     </Setter> -->
            <!--                     ~1~ <Setter Property="Template"> @1@ -->
            <!--                     ~1~     <Setter.Value> @1@ -->
            <!--                     ~1~         <ControlTemplate TargetType="primitives:DataGridColumnHeader"> @1@ -->
            <!--                     ~1~             <Grid Background="{TemplateBinding Background}"> @1@ -->
            <!--  ~1~  <StackPanel  @1@  -->
            <!--  ~1~  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  @1@  -->
            <!--  ~1~  Margin="{TemplateBinding Padding}"  @1@  -->
            <!--  ~1~  Orientation="Horizontal"  @1@  -->
            <!--  ~1~  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">  @1@  -->
            <!--                     ~1~                     <CheckBox IsChecked="True" /> @1@ -->
            <!--                     ~1~                 </StackPanel> @1@ -->
            <!--                     ~1~             </Grid> @1@ -->
            <!--                     ~1~         </ControlTemplate> @1@ -->
            <!--                     ~1~     </Setter.Value> @1@ -->
            <!--                     ~1~ </Setter> @1@ -->
            <!--                 </Style> -->
            <!--             </toolkit:DataGridTemplateColumn.HeaderStyle> -->
            <!--             <toolkit:DataGridTemplateColumn.CellTemplate> -->
            <!--                 <DataTemplate> -->
            <!--                     <CheckBox Command="{Binding DataContext.CheckCommand, RelativeSource={RelativeSource Mode=Self}}" IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" /> -->
            <!--                 </DataTemplate> -->
            <!--             </toolkit:DataGridTemplateColumn.CellTemplate> -->
            <!--         </toolkit:DataGridTemplateColumn> -->
            <!--  ~1~  <toolkit:DataGridCheckBoxColumn  @1@  -->
            <!--  ~1~  Binding="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}"  @1@  -->
            <!--  ~1~  CanUserSort="False"  @1@  -->
            <!--  ~1~  Header="">  @1@  -->
            <!--         ~1~     <toolkit:DataGridCheckBoxColumn.HeaderStyle> @1@ -->
            <!--         ~1~         <Style TargetType="primitives:DataGridColumnHeader"> @1@ -->
            <!--         ~1~             <Setter Property="ContentTemplate"> @1@ -->
            <!--         ~1~                 <Setter.Value> @1@ -->
            <!--         ~1~                     <DataTemplate> @1@ -->
            <!--         ~1~                         <StackPanel Orientation="Horizontal"> @1@ -->
            <!--         ~1~                             <CheckBox IsChecked="{Binding AllSelected}">Select All</CheckBox> @1@ -->
            <!--         ~1~                         </StackPanel> @1@ -->
            <!--         ~1~                     </DataTemplate> @1@ -->
            <!--         ~1~                 </Setter.Value> @1@ -->
            <!--         ~1~             </Setter> @1@ -->
            <!--         ~1~             ~2~ <Setter Property="Template"> @2@ @1@ -->
            <!--         ~1~             ~2~     <Setter.Value> @2@ @1@ -->
            <!--         ~1~             ~2~         <ControlTemplate TargetType="primitives:DataGridColumnHeader"> @2@ @1@ -->
            <!--         ~1~             ~2~             <Grid Background="{TemplateBinding Background}"> @2@ @1@ -->
            <!--  ~1~  ~2~  <StackPanel  @2@  @1@  -->
            <!--  ~1~  ~2~  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  @2@  @1@  -->
            <!--  ~1~  ~2~  Margin="{TemplateBinding Padding}"  @2@  @1@  -->
            <!--  ~1~  ~2~  Orientation="Horizontal"  @2@  @1@  -->
            <!--  ~1~  ~2~  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">  @2@  @1@  -->
            <!--         ~1~             ~2~                     <CheckBox IsChecked="True" /> @2@ @1@ -->
            <!--         ~1~             ~2~                 </StackPanel> @2@ @1@ -->
            <!--         ~1~             ~2~             </Grid> @2@ @1@ -->
            <!--         ~1~             ~2~         </ControlTemplate> @2@ @1@ -->
            <!--         ~1~             ~2~     </Setter.Value> @2@ @1@ -->
            <!--         ~1~             ~2~ </Setter> @2@ @1@ -->
            <!--         ~1~         </Style> @1@ -->
            <!--         ~1~     </toolkit:DataGridCheckBoxColumn.HeaderStyle> @1@ -->
            <!--         ~1~ </toolkit:DataGridCheckBoxColumn> @1@ -->
            <!--    -->
            <!--  <toolkit:DataGridCheckBoxColumn  -->
            <!--  Binding="{Binding IsChecked, Mode=TwoWay}"  -->
            <!--  CanUserSort="False"  -->
            <!--  Header="Checked"  -->
            <!--  Tag="isChecked" />  -->
            <!--    -->
            <!--  <toolkit:DataGridTextColumn  -->
            <!--  Binding="{Binding Title, Mode=OneWay}"  -->
            <!--  CanUserSort="True"  -->
            <!--  Header="Title"  -->
            <!--  IsReadOnly="True"  -->
            <!--  Tag="title" />  -->
            <!--  <toolkit:DataGridTextColumn  -->
            <!--  Binding="{Binding Artist, Mode=OneWay}"  -->
            <!--  CanUserSort="True"  -->
            <!--  Header="Artist"  -->
            <!--  IsReadOnly="True"  -->
            <!--  Tag="artist" />  -->
            <!--  ~1~  <toolkit:DataGridCheckBoxColumn  @1@  -->
            <!--  ~1~  Binding="{Binding Selected}"  @1@  -->
            <!--  ~1~  CanUserSort="False"  @1@  -->
            <!--  ~1~  Header="Selected"  @1@  -->
            <!--  ~1~  Tag="selected" />  @1@  -->
            <!--         <toolkit:DataGridTemplateColumn Header="Start" Tag="Start"> -->
            <!--             <toolkit:DataGridTemplateColumn.CellTemplate> -->
            <!--                 <DataTemplate> -->
            <!--                     <Button Click="Play_Row_Click" Content="Play" /> -->
            <!--                 </DataTemplate> -->
            <!--             </toolkit:DataGridTemplateColumn.CellTemplate> -->
            <!--         </toolkit:DataGridTemplateColumn> -->
            <!--     </toolkit:DataGrid.Columns> -->
            <!-- </toolkit:DataGrid> -->

            <local:PlaylistView MediaList="{x:Bind PlayerViewModel.MediaList, Mode=OneWay}" x:Name="playlistView" />

            <!-- <controls:HeaderedItemsControl ItemsSource="{x:Bind ViewModel.Entries}"> -->
            <!--     <controls:HeaderedItemsControl.Header> -->
            <!--         <Grid ColumnSpacing="16" Padding="0,8"> -->
            <!--             <Grid.ColumnDefinitions> -->
            <!--                 <ColumnDefinition Width="80" /> -->
            <!--                 <ColumnDefinition Width="120" /> -->
            <!--                 <ColumnDefinition Width="*" /> -->
            <!--                 <ColumnDefinition Width="100" /> -->
            <!--             </Grid.ColumnDefinitions> -->
            <!--             <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}" Text="Id" /> -->
            <!--  <TextBlock  -->
            <!--  Foreground="{ThemeResource TextFillColorSecondaryBrush}"  -->
            <!--  Grid.Column="1"  -->
            <!--  Text="Name" />  -->
            <!--  <TextBlock  -->
            <!--  Foreground="{ThemeResource TextFillColorSecondaryBrush}"  -->
            <!--  Grid.Column="2"  -->
            <!--  Text="Description" />  -->
            <!--  <TextBlock  -->
            <!--  Foreground="{ThemeResource TextFillColorSecondaryBrush}"  -->
            <!--  Grid.Column="3"  -->
            <!--  Text="Quantity" />  -->
            <!--         </Grid> -->
            <!--     </controls:HeaderedItemsControl.Header> -->
            <!--     <controls:HeaderedItemsControl.ItemTemplate> -->
            <!--         <DataTemplate x:DataType="models:MusicImport"> -->
            <!--             <controls:DataRow> -->
            <!--                 <TextBlock Text="{x:Bind Id}" /> -->
            <!--                 <TextBlock Text="{x:Bind FileName}" /> -->
            <!--                 <TextBlock Text="{x:Bind FileSize}" /> -->
            <!--                 <TextBlock Text="{x:Bind IsChecked.ToString()}" /> -->
            <!--             </controls:DataRow> -->
            <!--         </DataTemplate> -->
            <!--     </controls:HeaderedItemsControl.ItemTemplate> -->
            <!--     <controls:HeaderedItemsControl.ItemContainerStyle> -->
            <!--         <Style TargetType="ContentPresenter"> -->
            <!--             <Setter Property="HorizontalContentAlignment" Value="Stretch" /> -->
            <!--         </Style> -->
            <!--     </controls:HeaderedItemsControl.ItemContainerStyle> -->
            <!-- </controls:HeaderedItemsControl> -->



            <StackPanel Grid.Column="1">
                <MediaPlayerElement
                    AreTransportControlsEnabled="True"
                    MaxHeight="400"
                    MaxWidth="400"
                    x:Name="mediaPlayerElement">
                    <MediaPlayerElement.TransportControls>
                        <MediaTransportControls IsCompact="False" />
                    </MediaPlayerElement.TransportControls>
                </MediaPlayerElement>

                <StackPanel
                    Margin="10,40,0,0"
                    Orientation="Horizontal"
                    VerticalAlignment="Top"
                    Visibility="Collapsed"
                    x:Name="customButtons">
                    <Button
                        Click="{x:Bind PlayerViewModel.SkipPrevious}"
                        Height="100"
                        IsEnabled="{x:Bind PlayerViewModel.CanSkipPrevious, Mode=OneWay}"
                        Width="100"
                        x:Name="prevButton">
                        <SymbolIcon Symbol="Previous" />
                    </Button>
                    <Button
                        Click="{x:Bind PlayerViewModel.TogglePlayPause}"
                        Height="100"
                        Width="100"
                        x:Name="playButton">
                        <SymbolIcon Symbol="{x:Bind PlayerViewModel.PlaybackSession.PlaybackState, Mode=OneWay, Converter={StaticResource MediaPlaybackStateToButtonIconConverter}}" />
                    </Button>
                    <Button
                        Click="{x:Bind PlayerViewModel.SkipNext}"
                        Height="100"
                        IsEnabled="{x:Bind PlayerViewModel.CanSkipNext, Mode=OneWay}"
                        Width="100"
                        x:Name="nextButton">
                        <SymbolIcon Symbol="Next" />
                    </Button>
                </StackPanel>

            </StackPanel>

            <!--  <ScrollViewer  -->
            <!--  Grid.Row="1"  -->
            <!--  VerticalScrollBarVisibility="Auto"  -->
            <!--  VerticalScrollMode="Auto">  -->
            <!--     <StackPanel> -->
            <!--         <StackPanel Orientation="Horizontal"> -->
            <!--             <StackPanel> -->
            <!--  <MediaPlayerElement  -->
            <!--  AreTransportControlsEnabled="True"  -->
            <!--  MaxHeight="400"  -->
            <!--  MaxWidth="400"  -->
            <!--  x:Name="mediaPlayerElement">  -->
            <!--                     <MediaPlayerElement.TransportControls> -->
            <!--                         <MediaTransportControls IsCompact="False" /> -->
            <!--                     </MediaPlayerElement.TransportControls> -->
            <!--                 </MediaPlayerElement> -->
            <!--    -->
            <!--  <StackPanel  -->
            <!--  Margin="10,40,0,0"  -->
            <!--  Orientation="Horizontal"  -->
            <!--  VerticalAlignment="Top"  -->
            <!--  Visibility="Collapsed"  -->
            <!--  x:Name="customButtons">  -->
            <!--  <Button  -->
            <!--  Click="{x:Bind PlayerViewModel.SkipPrevious}"  -->
            <!--  Height="100"  -->
            <!--  IsEnabled="{x:Bind PlayerViewModel.CanSkipPrevious, Mode=OneWay}"  -->
            <!--  Width="100"  -->
            <!--  x:Name="prevButton">  -->
            <!--                         <SymbolIcon Symbol="Previous" /> -->
            <!--                     </Button> -->
            <!--  <Button  -->
            <!--  Click="{x:Bind PlayerViewModel.TogglePlayPause}"  -->
            <!--  Height="100"  -->
            <!--  Width="100"  -->
            <!--  x:Name="playButton">  -->
            <!--                         <SymbolIcon Symbol="{x:Bind PlayerViewModel.PlaybackSession.PlaybackState, Mode=OneWay, Converter={StaticResource MediaPlaybackStateToButtonIconConverter}}" /> -->
            <!--                     </Button> -->
            <!--  <Button  -->
            <!--  Click="{x:Bind PlayerViewModel.SkipNext}"  -->
            <!--  Height="100"  -->
            <!--  IsEnabled="{x:Bind PlayerViewModel.CanSkipNext, Mode=OneWay}"  -->
            <!--  Width="100"  -->
            <!--  x:Name="nextButton">  -->
            <!--                         <SymbolIcon Symbol="Next" /> -->
            <!--                     </Button> -->
            <!--                 </StackPanel> -->
            <!--    -->
            <!--             </StackPanel> -->
            <!--             <StackPanel Margin="40,0,0,0"> -->
            <!--                 <local:PlaylistView MediaList="{x:Bind PlayerViewModel.MediaList, Mode=OneWay}" x:Name="playlistView" /> -->
            <!--    -->
            <!--  <TextBlock  -->
            <!--  Height="30"  -->
            <!--  HorizontalAlignment="Left"  -->
            <!--  Margin="10,10,0,0"  -->
            <!--  Style="{StaticResource BodyTextBlockStyle}"  -->
            <!--  Text="{x:Bind PlayerViewModel.MediaList.CurrentItem.Title, Mode=OneWay}"  -->
            <!--  TextWrapping="Wrap"  -->
            <!--  VerticalAlignment="Top"  -->
            <!--  Visibility="Collapsed"  -->
            <!--  x:Name="currentTrackTitle" />  -->
            <!--  <TextBlock  -->
            <!--  Height="30"  -->
            <!--  HorizontalAlignment="Left"  -->
            <!--  Margin="10,50,0,0"  -->
            <!--  Style="{StaticResource BodyTextBlockStyle}"  -->
            <!--  Text="{x:Bind PlayerViewModel.PlaybackSession.PlaybackState, Mode=OneWay}"  -->
            <!--  TextWrapping="Wrap"  -->
            <!--  VerticalAlignment="Top"  -->
            <!--  Visibility="Collapsed"  -->
            <!--  x:Name="currentStateTextBlock" />  -->
            <!--             </StackPanel> -->
            <!--         </StackPanel> -->
            <!--     </StackPanel> -->
            <!-- </ScrollViewer> -->

            <!--  <muxc:ProgressBar  -->
            <!--  HorizontalAlignment="Stretch"  -->
            <!--  IsIndeterminate="True"  -->
            <!--  Margin="0,50,0,0"  -->
            <!--  VerticalAlignment="Top"  -->
            <!--  Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />  -->
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PanelRoot.Padding" Value="8,48,8,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>

    <Page.BottomAppBar>
        <CommandBar
            Background="Transparent"
            DefaultLabelPosition="Right"
            Grid.Row="1"
            HorizontalAlignment="Right"
            IsDynamicOverflowEnabled="False"
            MaxHeight="300"
            OverflowButtonVisibility="Auto">
            <AppBarButton
                Command="{x:Bind ViewModel.FirstAsyncCommand, Mode=OneWay}"
                Foreground="{ThemeResource SystemAccentColor}"
                Icon="Previous"
                ToolTipService.ToolTip="First" />
            <AppBarButton
                Command="{x:Bind ViewModel.PreviousAsyncCommand, Mode=OneWay}"
                Foreground="{ThemeResource SystemAccentColor}"
                Icon="Back"
                ToolTipService.ToolTip="Previous" />
            <AppBarElementContainer VerticalContentAlignment="Center">
                <TextBlock Margin="12,0,8,0" Text="Page" />
            </AppBarElementContainer>
            <AppBarElementContainer VerticalContentAlignment="Center">
                <TextBlock Text="{x:Bind ViewModel.PageNumber, Mode=OneWay}" />
            </AppBarElementContainer>
            <AppBarElementContainer VerticalContentAlignment="Center">
                <TextBlock Margin="8,0" Text="of" />
            </AppBarElementContainer>
            <AppBarElementContainer VerticalContentAlignment="Center">
                <TextBlock Margin="0,0,12,0" Text="{x:Bind ViewModel.PageCount, Mode=OneWay}" />
            </AppBarElementContainer>
            <AppBarButton
                Command="{x:Bind ViewModel.NextAsyncCommand, Mode=OneWay}"
                Foreground="{ThemeResource SystemAccentColor}"
                Icon="Forward"
                ToolTipService.ToolTip="Next" />
            <AppBarButton
                Command="{x:Bind ViewModel.LastAsyncCommand, Mode=OneWay}"
                Foreground="{ThemeResource SystemAccentColor}"
                Icon="Next"
                ToolTipService.ToolTip="Last" />
            <AppBarSeparator />
            <AppBarElementContainer VerticalContentAlignment="Center">
                <TextBlock Margin="8,0" Text="Rows per page" />
            </AppBarElementContainer>
            <AppBarElementContainer VerticalContentAlignment="Center">
                <ComboBox ItemsSource="{x:Bind ViewModel.PageSizes}" SelectedItem="{x:Bind ViewModel.PageSize, Mode=TwoWay}" />
            </AppBarElementContainer>
        </CommandBar>
    </Page.BottomAppBar>

</Page>
