<Page
    HighContrastAdjustment="None"
    x:Class="SnpApp.Navigation.NavigationRootPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!--  TitleBar  -->
            <RowDefinition Height="*" />
            <!--  NavView  -->
        </Grid.RowDefinitions>

        <Border
            AutomationProperties.AutomationId="AppTitleBar"
            Canvas.ZIndex="1"
            Grid.Column="1"
            Height="{Binding ElementName=NavigationViewControl, Path=CompactPaneLength}"
            IsHitTestVisible="True"
            Margin="48,0,0,0"
            VerticalAlignment="Stretch"
            x:Name="AppTitleBar">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <Image Source="ms-appx:///Assets/Tiles/TitlebarLogo.png" Width="18" />
                <TextBlock
                    Margin="12,0,0,0"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind AppTitleText}"
                    VerticalAlignment="Center"
                    x:Name="AppTitle" />
                <TextBox
                    Height="40"
                    Margin="16,0,0,0"
                    MinWidth="300"
                    PlaceholderText="Enter any text"
                    Visibility="Collapsed"
                    x:Name="AppTitleBarTextBox" />
            </StackPanel>
        </Border>

        <Grid Grid.Column="1" x:Name="AutomationHelpersPanel">
            <Grid.Resources>
                <Style TargetType="Control" x:Key="AutomationHelperStyle">
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="Width" Value="0" />
                    <Setter Property="Height" Value="0" />
                    <Setter Property="Opacity" Value="0" />
                </Style>
            </Grid.Resources>

            <TextBlock
                AutomationProperties.AutomationId="__CurrentPage"
                FontSize="18"
                Margin="10,0,0,0"
                VerticalAlignment="Center"
                x:Name="CurrentPageTextBlock" />
            <!--  Automation Helpers  -->
            <!--
                These are not visible, but are used via UIA. They are fundamental to the operation of our test automation, so they should not be collapsed since
                that prevents them from showing up in the UIA tree.
            -->
            <Button
                AutomationProperties.AutomationId="__GoBackInvoker"
                Click="GoBackInvokerButton_Click"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="GoBackInvokerButton" />
            <Button
                AutomationProperties.AutomationId="__CloseAppInvoker"
                Click="CloseAppInvokerButton_Click"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="CloseAppInvokerButton" />
            <Button
                AutomationProperties.AutomationId="__WaitForIdleInvoker"
                Click="WaitForIdleInvokerButton_Click"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="WaitForIdleInvokerButton" />
            <CheckBox
                AutomationProperties.AutomationId="__IdleStateEnteredCheckBox"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="_idleStateEnteredCheckBox" />
            <TextBox
                AutomationProperties.AutomationId="__ErrorReportingTextBox"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="_errorReportingTextBox" />
            <TextBox
                AutomationProperties.AutomationId="__LogReportingTextBox"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="_logReportingTextBox" />
            <CheckBox
                AutomationProperties.AutomationId="__ViewScalingCheckBox"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="ViewScalingCheckBox" />
            <Button
                AutomationProperties.AutomationId="__WaitForDebuggerInvoker"
                Click="WaitForDebuggerInvokerButton_Click"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="WaitForDebuggerInvokerButton" />
            <CheckBox
                AutomationProperties.AutomationId="__DebuggerAttachedCheckBox"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="DebuggerAttachedCheckBox" />
            <TextBox
                AcceptsReturn="True"
                AutomationProperties.AutomationId="__UnhandledExceptionReportingTextBox"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="UnhandledExceptionReportingTextBox" />
            <CheckBox
                AutomationProperties.AutomationId="__TestContentLoadedCheckBox"
                Content="TestContentLoadedCheckbox"
                IsChecked="False"
                Style="{StaticResource AutomationHelperStyle}"
                x:Name="TestContentLoadedCheckBox" />

        </Grid>

        <!--
            Don't set IsTitleBarAutoPaddingEnabled, since it should only be set false when we're using Window.SetTitleBar(), which isn't currently available.
            Restore by re-applying https://github.com/microsoft/WinUI-Gallery/pull/198
        -->
        <NavigationView
            Canvas.ZIndex="0"
            DisplayModeChanged="OnPaneDisplayModeChanged"
            Grid.Column="1"
            Grid.RowSpan="2"
            IsTabStop="False"
            IsTitleBarAutoPaddingEnabled="True"
            Loaded="OnNavigationViewControlLoaded"
            SelectionChanged="OnNavigationViewSelectionChanged"
            x:Name="NavigationViewControl">
            
            <RelativePanel>
                <Frame
                    Margin="5"
                    Navigated="OnRootFrameNavigated"
                    Navigating="OnRootFrameNavigating"
                    RelativePanel.Above="StatusPanel"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignTopWithPanel="True"
                    x:Name="rootFrame" />
                <StackPanel
                    Orientation="Vertical"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    x:Name="StatusPanel">
                    <TextBlock
                        Margin="10,0,0,10"
                        Text="Status:"
                        TextWrapping="Wrap"
                        x:Name="StatusLabel" />
                    <Border Margin="0,0,0,0" x:Name="StatusBorder">
                        <ScrollViewer
                            MaxHeight="200"
                            VerticalScrollBarVisibility="Auto"
                            VerticalScrollMode="Auto">
                            <!--  Use LiveSetting to enable screen readers to announce the status update.  -->
                            <TextBlock
                                AutomationProperties.LiveSetting="Assertive"
                                FontWeight="Bold"
                                Margin="10,10,10,20"
                                MaxWidth="{Binding ElementName=Splitter, Path=ActualWidth}"
                                TextWrapping="Wrap"
                                x:Name="StatusBlock" />
                        </ScrollViewer>
                    </Border>
                </StackPanel>
            </RelativePanel>


            <!--  <Frame  -->
            <!--  Navigated="OnRootFrameNavigated"  -->
            <!--  Navigating="OnRootFrameNavigating"  -->
            <!--  x:Name="rootFrame" />  -->



            <NavigationView.MenuItems>
                <NavigationViewItem
                    AutomationProperties.AutomationId="Home"
                    Content="Home"
                    Icon="Home"
                    x:Name="Home" />

                <NavigationViewItem
                    AutomationProperties.AutomationId="Customer2"
                    Content="Customer2"
                    Icon="Home"
                    x:Name="Customer2" />

                <NavigationViewItem
                    AutomationProperties.AutomationId="MusicUpload"
                    Content="MusicUpload"
                    Icon="Home"
                    x:Name="MusicUpload" />

                <NavigationViewItem
                    AutomationProperties.AutomationId="MusicImport"
                    Content="MusicImport"
                    Icon="Home"
                    x:Name="MusicImport" />

                <NavigationViewItem
                    AutomationProperties.AutomationId="WaveForm"
                    Content="WaveForm"
                    Icon="Home"
                    x:Name="WaveForm" />

                <NavigationViewItem
                    AutomationProperties.AutomationId="Test"
                    Content="Test"
                    Icon="Home"
                    x:Name="Test" />
                
            </NavigationView.MenuItems>
        </NavigationView>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="TitleBarStates">
                <VisualState x:Name="Default" />
                <VisualState x:Name="Compact">
                    <VisualState.Setters>
                        <Setter Target="AppTitleBar.Margin" Value="96,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Top">
                    <VisualState.Setters>
                        <Setter Target="AppTitleBar.Margin" Value="16,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="WindowActivationStates">
                <VisualState x:Name="Activated" />
                <VisualState x:Name="Deactivated">
                    <VisualState.Setters>
                        <Setter Target="AppTitle.Foreground" Value="{ThemeResource TextFillColorTertiaryBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
